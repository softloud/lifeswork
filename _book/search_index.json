[
["index.html", "life‚Äôs work ruminations on the inelegant art of failing forwards section 1 preamble", " life‚Äôs work ruminations on the inelegant art of failing forwards Charles T. Gray perennial work in progress Saturday 15 June 2019 section 1 preamble What if one practices mathematical science like music? My goal is to spend four hours a day on work with intent. I wish to live a life with intent; as I have seen how much unhappiness it can bring to live without. For sanity, efficiency, and inspiration, I intend to balance my time between categories: research, \\(\\varphi\\); skills, \\(\\theta\\); busywork, \\(\\psi\\); and wellness, \\(\\pi\\) pic.twitter.com/wrCNDIcdLt ‚Äî Charles T. Gray ((???)) May 26, 2019 "],
["what-is-this.html", "section 2 what is this? 2.1 version 2.2 how was it made?", " section 2 what is this? This manuscript is a triptych of analysis of my productivity data rituals rituals to facillitate flow in practicing mathematical science ruminations a reminder to self about why I chose what I did 2.1 version Captain Marvel GIF from Captainmarvel GIFs operation instantiated last updated phoenix Tuesday 2 April 2019 Saturday 15 June 2019 2.2 how was it made? bookdown:: + tidyverse:: + googlesheets:: + softloud/dontpanic:: todo: refs check out the code feature requests "],
["analysis.html", "section 3 analysis 3.1 wrangling 3.2 intensity achieved 3.3 distribution of work", " section 3 analysis 3.1 wrangling skip the code # packages used in this chapter library(tidyverse) library(googlesheets) library(usethis) library(dontpanic) library(lubridate) library(ggmosaic) library(latex2exp) # register sheet measures &lt;- gs_key(measures_gs_key) # import workload key workload_key &lt;- measures %&gt;% gs_read(ws = &quot;workload_key&quot;) # import data atracker_data &lt;- read_csv(timetracker_path) write_csv(atracker_data, &quot;data/atracker_data.csv&quot;) timer_raw &lt;- read_csv(&quot;data/atracker_data.csv&quot;) timer &lt;- timer_raw %&gt;% # tidy column names dplyr::rename( task = `Task name`, description = `Task description`, start = `Start time`, finish = `End time`, duration = Duration, duration_hrs = `Duration in hours`, note = Note, category = Tag ) %&gt;% dplyr::mutate( # get date object, as I&#39;ll want to do things by day start = lubridate::dmy_hm(start), finish = lubridate::dmy_hm(finish), date = lubridate::date(start) ) %&gt;% dplyr::filter(category != &quot;pi&quot;) intensities &lt;- c( &quot;nothing&quot;, &quot;sweet fuck all&quot;, &quot;eh, got some stuff done&quot;, &quot;pretty good effort&quot;, &quot;eaglescream&quot; ) daily_work &lt;- timer %&gt;% mutate(duration_hrs = if_else(is.na(duration_hrs), 0, duration_hrs)) %&gt;% dplyr::filter(category == &quot;phi&quot; | category == &quot;theta&quot; | category == &quot;psi&quot;) %&gt;% select(-note,-description) %&gt;% group_by(date, category) %&gt;% summarise(hrs = sum(duration_hrs)) workload &lt;- workload_key %&gt;% gather(key = category, value = poms_goal, -workload) %&gt;% mutate(goal = (poms_goal * 20) / 60) %&gt;% select(-poms_goal) %&gt;% spread(key = workload, value = goal) intensity &lt;- full_join(daily_work, workload, by = &quot;category&quot;) %&gt;% mutate(category_intensity = case_when( hrs == 0 ~ intensities[1], hrs &lt; light ~ intensities[2], hrs &lt; moderate ~ intensities[3], hrs &lt; hardcore ~ intensities[4], hrs &gt; hardcore ~ intensities[5] )) %&gt;% group_by(date) %&gt;% mutate(daily_intensity = case_when( all(hrs &gt; hardcore) ~ intensities[5], all(hrs &gt; moderate) ~ intensities[4], all(hrs &gt; light) ~ intensities[3], any(hrs &lt; light) ~ intensities[2], all(hrs == 0) ~ intensities[1] )) %&gt;% dplyr::filter(category != &quot;pi&quot;) count_workload &lt;- function(days = 10, era) { intensity %&gt;% dplyr::filter(date &gt; today() - days) %&gt;% ungroup() %&gt;% count(category, category_intensity, daily_intensity) %&gt;% mutate(era = days) } quinque &lt;- count_workload(days = 5) decade &lt;- count_workload(days = 10) century &lt;- count_workload(days = 100) mosaic_data &lt;- count_workload(days = 1000) %&gt;% bind_rows(quinque, decade, century) %&gt;% ungroup() %&gt;% mutate( category = fct_relevel(category, &quot;phi&quot;, &quot;theta&quot;, &quot;psi&quot;), category_intensity = fct_relevel(category_intensity, intensities), daily_intensity = fct_relevel(daily_intensity, intensities), era_plot = case_when( era == 5 ~ &quot;quinque&quot;, # &quot;\\\\romannumeral{5}&quot;, era == 10 ~ &quot;decade&quot;, # &quot;\\\\romannumeral{10}&quot;, era == 100 ~ &quot;century&quot;, # &quot;\\\\romannumeral{100}&quot;, era == 1000 ~ &quot;millenium&quot; # &quot;\\\\romannumeral{1000}&quot; ), era_plot = fct_relevel(era_plot, &quot;quinque&quot;, &quot;decade&quot;, &quot;century&quot;, &quot;millenium&quot;), category = fct_relevel(category, &quot;phi&quot;, &quot;theta&quot;, &quot;psi&quot;) ) category_boxplot &lt;- intensity %&gt;% mutate(era = 1000) %&gt;% bind_rows( intensity %&gt;% dplyr::filter(date &gt; today() - 5) %&gt;% mutate(era = 5), intensity %&gt;% dplyr::filter(date &gt; today() - 10) %&gt;% mutate(era = 10), intensity %&gt;% dplyr::filter(date &gt; today() - 100) %&gt;% mutate(era = 100) ) %&gt;% mutate( era_plot = case_when(era == 5 ~ &quot;quinque&quot;, # &quot;\\\\romannumeral{5}&quot;, era == 10 ~ &quot;decade&quot;, # &quot;\\\\romannumeral{10}&quot;, era == 100 ~ &quot;century&quot;, # &quot;\\\\romannumeral{100}&quot;, era == 1000 ~ &quot;millenium&quot;), era_plot = era_plot %&gt;% as_factor(), era_plot = fct_relevel(era_plot, &quot;quinque&quot;, &quot;decade&quot;, &quot;century&quot;, &quot;millenium&quot;), category = fct_relevel(category, &quot;phi&quot;, &quot;theta&quot;, &quot;psi&quot;) ) %&gt;% ggplot(aes(x = era_plot, y = hrs)) + geom_boxplot() + geom_hline( yintercept = 4 / 3, linetype = &quot;dotted&quot;, alpha = 0.7, colour = &quot;darkgrey&quot;, size = 1.5 ) + facet_grid(category ~ ., scales = &quot;free&quot;, labeller = label_parsed) + coord_flip() + labs( title = str_wrap(&quot;distribution of work done over different periods of time&quot;), x = &quot;hours of work completed&quot;, y = &quot;category of work&quot;, caption = &quot;dotted vertical line indicates daily goal for that category&quot; ) 3.2 intensity achieved intensity_mosaic 3.3 distribution of work category_boxplot "],
["rituals.html", "section 4 rituals 4.1 instantiate 4.2 ‚ô™ day view 4.3 ‚ô™ daily tasks 4.4 email 4.5 review 4.6 task cycle 4.7 ‚ô´ monthly log 4.8 pom goals 4.9 pom tracker 4.10 projects 4.11 task cycles 4.12 ‚ô´ progressed 4.13 ùÑê waiting 4.14 order of events 4.15 signifiers 4.16 playlists", " section 4 rituals # packages used in this chapter library(dontpanic) library(tidyverse) library(googlesheets) # register sheet measures &lt;- gs_key(measures_gs_key) # should extract the ws read for just # wrangling daily_tasks &lt;- get_daily_tasks() workload_key &lt;- get_workload_key() # better to pipe gs read into a wrangling function signifiers &lt;- measures %&gt;% gs_read(&quot;signifiers&quot;) day_view &lt;- measures %&gt;% gs_read(&quot;day_view&quot;) 4.1 instantiate Ask albert to instantiate. ‚ô™ top of today‚Äôs daily log and day view. Ask R what today is in French. R is your friend. today_date() %&gt;% cat() ## la date d&#39;aujourd&#39;hui est samedi, juin Daily log and monthly log pic.twitter.com/Wdtix2rZHJ ‚Äî Charles T. Gray ((???)) May 27, 2019 Draw up day view. In ‚ô™ daily log, add priority daily tasks \\(*\\) ‚ô™ \\(+ \\psi\\), with \\(*\\) ‚ô™ added to projects. In ùÑê waiting, schedule other daily tasks ‚ô™ \\(\\sim \\varnothing\\). Add \\(\\sharp \\pi \\cdot\\) coffee to ‚ô™ daily log. You deserve it. Add \\(\\star\\) priority daily tasks. Add \\(\\overline o\\) and \\(\\pi\\) to the order of events. 4.2 ‚ô™ day view day_view %&gt;% # create links mutate(tracker = paste0(&quot;[&quot;, tracker, &quot;](#&quot;,ref,&quot;)&quot;)) %&gt;% select(-ref) %&gt;% lifeswork_table() tracker position description goals top left pom goals order of events below goals top row plans alternation of \\(\\cdot\\) and \\(pi\\); now incorporates events pom tracker between goals and projects count how many poms have been achieved per category projects top right active projects: one per category task cycles below order of events plan upcoming task cyles projects progressed below pom tracker monthly log projects progressed today waiting below projects progressed for paring down to three active projects Day view pic.twitter.com/JL1BMvzO5C ‚Äî Charles T. Gray ((???)) May 27, 2019 4.3 ‚ô™ daily tasks # wrangling tasks for output # mighth port wrangle functions over to dontpanic at some point wrangle_tasks &lt;- function(tasks){ tasks %&gt;% mutate(priority = map_chr(priority, knittify_latex), context = map_chr(context, knittify_latex), category = map_chr(category, knittify_latex)) %&gt;% lifeswork_table() } 4.3.1 \\(*\\) Priority daily tasks pic.twitter.com/dFfNMEK0Hx ‚Äî Charles T. Gray ((???)) May 27, 2019 priority context category task description \\(\\star\\) \\(\\natural\\) \\(\\psi\\) calendar check day, week, month; note events of the day; upcoming deadlines \\(\\star\\) \\(\\forall\\) \\(\\psi\\) what is on fire? task or project must be due today and someone else will get stuffed around if I don‚Äôt do it \\(\\star\\) \\(\\natural\\) \\(\\psi\\) email inbox label as needs-action, waiting, archive \\(\\star\\) \\(\\natural\\) \\(\\psi\\) 3c^2 inbox NA \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) unpack suitcase NA \\(\\star\\) \\(\\sharp\\) \\(\\psi\\) pill take medication \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) kitchen clean kitchen \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) laundry put away one basket of laundry \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) floors vacuum or sweep living area 4.3.2 \\(* \\sharp\\) daily_tasks %&gt;% filter(str_detect(.$category, &quot;pi&quot;), str_detect(.$context, &quot;sharp&quot;)) %&gt;% wrangle_tasks() priority context category task description \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) handbag NA \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) unpack suitcase NA \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) wash brushes wash brushes \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) kitchen clean kitchen \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) laundry put away one basket of laundry \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) floors vacuum or sweep living area \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) water plants NA \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) vacuum the other areas 4.3.3 \\(\\sim\\) daily_tasks %&gt;% filter(priority == &quot;sim&quot;) %&gt;% wrangle_tasks() priority context category task description \\(\\sim\\) \\(\\natural\\) \\(\\psi\\) needs action finish pom \\(\\sim\\) \\(\\forall\\) \\(\\psi\\) monthly log each project should either have an associated collection, or a git hub repo or issue, location tagged in monthly log \\(\\sim\\) \\(\\natural\\) \\(\\psi\\) ynab finish pom \\(\\sim\\) \\(\\forall\\) \\(\\psi\\) thread NA 4.3.4 \\(\\varnothing\\) daily_tasks %&gt;% filter(priority == &quot;varnothing&quot;, category != &quot;pi&quot;) %&gt;% wrangle_tasks() priority context category task description \\(\\varnothing\\) \\(\\natural\\) \\(\\theta\\) export measures download report into files, then email to myself, then download \\(\\varnothing\\) \\(\\natural\\) \\(\\psi\\) waiting waiting emails 4.3.5 \\(\\pi\\) daily_tasks %&gt;% filter(category == &quot;pi&quot;) %&gt;% wrangle_tasks() priority context category task description \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) handbag NA \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) unpack suitcase NA \\(\\varnothing\\) \\(\\natural\\) \\(\\pi\\) write to dani check in with dani on slack \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) wash brushes wash brushes \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) kitchen clean kitchen \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) laundry put away one basket of laundry \\(\\star\\) \\(\\sharp\\) \\(\\pi\\) floors vacuum or sweep living area \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) water plants NA \\(\\varnothing\\) \\(\\sharp\\) \\(\\pi\\) vacuum the other areas 4.4 email 4.4.1 process inbox Check inbox once a day. archive [and label] emails that don‚Äôt require actions if I know what I want to say, best to do it now if it‚Äôs going to be lengthy or \\(\\sim\\), label as needs action 4.4.2 needs action start from the bottom, gmail doesn‚Äôt sort descending write a next action migrate task to \\(\\sim\\) [todo: quaver] \\(+ \\sim\\) can stop after one pom on this each day 4.5 review 4.5.1 ‚ô™ daily log This is the hard part. Pare down to one active project per category and process daily list to end of log. Cross through actions above. 4.5.1.1 if this project will take more than a day if (\\(*\\)) or (\\(\\sim\\)), create project for next step and migrate to projects waiting to progress else if associated with a repo, migrate to issues else migrate to monthly log add signifiers log projects in day view tracker add projects from monthly log if all \\(*\\) and \\(\\sim\\) have been completed aim to progress at least one \\(*\\) from the monthly log 4.5.2 ‚ô™ day view This is the sparkjoy bit. count poms log goals top up projects from projects waiting to maximum three active projects, one per category assign task cycles exclude \\(\\varnothing\\) categories with no \\(*\\) and \\(\\sim\\) projects where current goal has already been met in poms by category always finish with scheduling review \\(\\overline o\\) consider including a sparkjoy project calculate remaining poms 4.5.3 assess plan poms and \\(\\pi\\) to next goal Calculate number of poms I can realistically do, the floor of \\[ 14 - t - \\frac 3 2 c \\] where \\(t\\) denotes the number of hours of travel, and \\(c\\) the number of hours of community, where the lattter includes teaching, outreach, and research collaborations. That, is I aim to draw a distinction between self-directed time, and time where I have the benefit of external motivations. # todo: import tidyverse into dontpanic library(tidyverse) # output as of this update # todo: add dataset arg to fn dontpanic::calculate_pom_goal( travel_hrs = 0, # no travel today community_hrs = 0 # no teaching, meetings today ) ## ## aim to get 14 poms done today ## # A tibble: 9 x 5 ## workload usual category poms pom_diff ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 light 4 phi 2 2 ## 2 moderate 8 phi 4 4 ## 3 hardcore 14 phi 6 6 ## 4 light 4 theta 1 1 ## 5 moderate 8 theta 2 2 ## 6 hardcore 14 theta 4 4 ## 7 light 4 psi 1 1 ## 8 moderate 8 psi 2 2 ## 9 hardcore 14 psi 4 4 4.5.4 minibreak peeps social media &amp; slack 4.6 task cycle Task cycle pic.twitter.com/HuBwLgXP3x ‚Äî Charles T. Gray ((???)) May 27, 2019 shorthand description \\(\\forall *\\) complete all priority (\\(*\\)) tasks \\(\\sim \\geqslant 1\\) complete at least one anxiety (\\(\\sim\\)) task \\(\\varnothing \\geqslant 0\\) complete any or none of the untagged tasks \\(\\cdot \\geqslant 1\\) write down as many next actions as I can think of \\(\\overline o\\) review 4.7 ‚ô´ monthly log Projects that will take ‚ô´ longer than a day. Monthly log pic.twitter.com/4ynoMzcLnI ‚Äî Charles T. Gray ((???)) May 27, 2019 Need to incorporate this into managing papers. Chatting to a colleague and told them about the 30:80 model of writing a manuscript that I find really useful - thought I'd share it here to see if anyone else had something similar‚Ä¶? #writing #academicwriting (1/7) ‚Äî Neal Haddaway ((???)) May 6, 2019 4.8 pom goals pom := 20 minutes pic.twitter.com/MGRLiYviCX ‚Äî Charles T. Gray ((???)) May 26, 2019 4.9 pom tracker 4.10 projects 4.11 task cycles 4.12 ‚ô´ progressed 4.13 ùÑê waiting 4.14 order of events Day begins with review \\(\\overline o\\). 4.14.1 workday Alternate events: \\(\\not n + 2\\) poms \\(\\pi\\) Around other events such as meetings. 4.14.2 wake up wake up [read] wash &amp; dress [yoga] day view [yoga] 4.14.3 evening bathtime + reading bed 4.15 signifiers todo: create a signifiers sheet signifier meaning position \\(\\eigthnote\\) today 4 \\(star\\) priority 5 \\(i, ii, \\dots\\) project 4 \\(sim\\) anxiety 5 \\(\\cdot\\) task 1 \\(\\varphi\\) research 2 \\(\\theta\\) skills 2 \\(psi\\) busywork 2 \\(NA\\) project 3 \\(NA\\) look into 3 \\(\\natural\\) on computer 2 \\(o\\) event 1 \\(\\overline o\\) review 1 \\(NA\\) more than a day 2 4.16 playlists 4.16.1 for the good days 4.16.2 for the not so good days "],
["ruminations.html", "section 5 ruminations 5.1 daily projects 5.2 pomodoros 5.3 lowtech 5.4 work with intent 5.5 documenting the system is mindful time 5.6 \\(\\sim\\) beethoven piano sonata", " section 5 ruminations 5.1 daily projects If a project is logged in the daily-log then I am committing to finishing it today. 5.2 pomodoros 20 minutes seems to be the amount of time I can reasonably expect myself to focus unbroken. 5.3 lowtech Keep what can be kept on paper, on paper. Keeps screens free of clutter and helps me focus. 5.4 work with intent This term is adopted from a piano teacher that I studied under, that I subsequently adapted into my own teaching. She encouraged me to practice with intent; that is, play what you intend to play. I found this to be particularly useful for discouraging my students, and myself, from the age-old pitfall of playing a piece of music until you make a mistake and stopping and playing that section over until you get it right. It‚Äôs better to play through the piece, which empowers you to adapt to mistakes you will inevitably play and, most importantly, not lose time. Oddly, it appeared to be a universal misconception, myself included, that without careful consideration, the attempt to get the notes right inevitably means the rhythm is wrong, and thus you get nothing right after all. Best, therefore, to play through the piece. I use my bullet journal to help me focus on work with intent; I‚Äôve found the simplicity of only timing work when I‚Äôve written down what I intend to do has been extraordinarily powerful in helping me complete daunting tasks. 5.5 documenting the system is mindful time I often update my system. I see this as productive mindfulness; it is both meditative, I enjoy making something I find aesthetically pleasing, and functional, the systems do help me work happier. Something that really resonated with me about Cal Newport‚Äôs Deep Work was that my situation will change, and so, too, may what best facillitates flow. I will pick and choose elements from pomodoro, gtd, task switching, and so forth to achieve flow. Allowing this to be so flexible makes keeping track of my own system tricky at times. todo: fix inconsistencies in audience across manuscript - should be to self I am slowly automating the process of updates, where the manual process is ideally kept to tweaking a set of easy to navigate googlesheets which are scraped using the fabulous googlesheets:: and rendered with bookdown::. It‚Äôs exciting that using git, I can examine past systems. todo: refs This has a dual objective of providing a place to drop my thoughts, but also to test run bookdown::, as I will likely write my thesis in something this or distill::. Also, I think it‚Äôll level up my git-surfing skills. I enjoy taking breaks from doing mathematics to document my system and analyse my productivity. I often feel like it‚Äôs about finding activities that are posisitive experiences and productive in some way (for me, \\(\\varphi\\), \\(\\theta\\), \\(\\psi\\), andn \\(\\pi\\)). So, working on my system is \\(\\pi\\). 5.6 \\(\\sim\\) beethoven piano sonata todo: https://twitter.com/cantabile/status/1112145903203180544 "]
]
